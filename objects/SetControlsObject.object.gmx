<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>AllowInteraction = false;
Mapping = false;
KeyIndex = 0;
CurrentObject = 'none';
PanDirection = 'in';
Pan = 300;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(PanDirection = 'in'){//Pan In
    Pan -= 30;
    if(Pan &lt;= 0){
        Pan = 0;
        PanDirection = 'none';
        AllowInteraction = true;
    }
}
else if(PanDirection = 'out'){//Pan Out
    Pan += 30;
    if(Pan &gt;= 300){
        Pan = 300;
        PanDirection = 'none';
        with(CurrentObject){
            AllowInteraction = true;
        }
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Key Event Listeners

//choosing control to set

if(AllowInteraction &amp;&amp; !Mapping){
    //Select
    if (keyboard_check_pressed(global.SelectButton)){
        sound_play(MenuSelectSound);
        Mapping = true;
        //io_clear();//in case select button is the same as up or down, make sure it doesnt fire both events.
    }
    
    //Back
    if (keyboard_check_pressed(global.BackButton)){
        AllowInteraction = false;
        sound_play(MenuPanSound);
        PanDirection = 'out';
    }
    
    //Left
    if (keyboard_check_pressed(global.LeftButton)){

    }
    
    //Right
    if (keyboard_check_pressed(global.RightButton)){

    }
    
    //Up
    if (keyboard_check_pressed(global.UpButton)){
        if(KeyIndex != 0){
            KeyIndex -= 1;
            sound_play(MenuMoveSound);
        }
    }
    
    //Down
    if (keyboard_check_pressed(global.DownButton)){
        if(KeyIndex != 5){
            KeyIndex += 1;
            sound_play(MenuMoveSound);
        }
    }
}
//setting controls
else if(Mapping){
    if(keyboard_check_pressed(vk_anykey)){//we pressed a key
        switch KeyIndex{//set the correct key
            case 0: global.UpButton = keyboard_lastkey; break; //set up button to new key
            case 1: global.DownButton = keyboard_lastkey; break; //set down button to new key
            case 2: global.LeftButton = keyboard_lastkey; break; //set left button to new key
            case 3: global.RightButton = keyboard_lastkey; break; //set right button to new key
            case 4: global.SelectButton = keyboard_lastkey; break; //set select button to new key
            case 5: global.BackButton = keyboard_lastkey; break; //set back button to new key
        }
        Mapping = false;
        sound_play(MenuPanSound);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(MenuFont);
draw_set_color(c_white);
draw_set_halign(fa_left);

draw_sprite(ControlConfigWindow,0,10-Pan,81);

draw_text(30-Pan,81,"Up:");
draw_text(30-Pan,91,"Down:");
draw_text(30-Pan,101,"Left:");
draw_text(30-Pan,111,"Right:");
draw_text(30-Pan,121,"Select:");
draw_text(30-Pan,131,"Cancel:");
draw_text(30-Pan,141,"Future Button:");
draw_text(30-Pan,151,"Future Button:");
draw_text(30-Pan,161,"Future Button:");




draw_text(110-Pan,81,ControlMapList(global.UpButton));
draw_text(110-Pan,91,ControlMapList(global.DownButton));
draw_text(110-Pan,101,ControlMapList(global.LeftButton));
draw_text(110-Pan,111,ControlMapList(global.RightButton));
draw_text(110-Pan,121,ControlMapList(global.SelectButton));
draw_text(110-Pan,131,ControlMapList(global.BackButton));

draw_sprite_ext(SelectSprite,0,26-Pan + 80*Mapping,92 + KeyIndex*10,-1,1,0,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
