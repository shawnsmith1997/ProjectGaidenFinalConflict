<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>LosMaxDown</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>OverworldCharacterMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//takes care of character animations (head shake, nod head, studder)

Action = 'shudder'; //Shake, Nod, Studder, (vanish / spiral out as well?)
NodDelay = 0;
Iterations = 1;
Counter = 0;
XOffset = 0;
YOffset = 0;
OffsetDirection = 1;
ShudderDelay = 0;
CurrentObject = 0;//The guy doing the action;

//sprite will be stationary and not animated, sprite index will be asigned when created
image_speed = 0;
image_index = 0;

visible = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_other,ev_user0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(Counter &lt;= Iterations){


if(Action = 'shake'){
    XOffset -= OffsetDirection;
    if(XOffset &lt;= -1)||(XOffset &gt;= 1){
        OffsetDirection *= -1;//reverse shake direction
    }
}
else if(Action = 'nod'){
    NodDelay += 1;
    if(NodDelay &gt;= 25){
        NodDelay = 0;
        YOffset += OffsetDirection;
        if(YOffset &lt;= -1)||(YOffset &gt;= 0){
            OffsetDirection *= -1;//reverse nod direction
        }
        if(YOffset &gt;= 0){
            Counter += 1;
        }
    }
}
else if(Action = 'shudder'){
    ShudderDelay += 1;
    if(ShudderDelay &gt;= 5){
        ShudderDelay = 0;
        YOffset -= 4*OffsetDirection;
        if(YOffset &lt;= -4)||(YOffset &gt;= 0){
            OffsetDirection *= -1;//reverse studder direction
        }
        if(YOffset &gt;= 0){
            Counter += 1;
        }
    }
}


}
else{//end event;
    event_perform(ev_other,ev_user0);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>CurrentObject.visible = true;
visible = false;
GlobalCutsceneCalls();//end action
instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(Action = 'nod'){
    draw_sprite_part(sprite_index,image_index,0,0,4,13,x,y-8);//8 is subtracted because the origin of the sprite starts at 8 //left shoulder
    draw_sprite_part(sprite_index,image_index,19,0,5,13,x+19,y-8);//8 is subtracted because the origin of the sprite starts at 8 //right shoulder
    draw_sprite_part(sprite_index,image_index,0,13,24,11,x,y-8+13);//8 is subtracted because the origin of the sprite starts at 8 //body
    draw_sprite_part(sprite_index,image_index,4,0,18,13,x+4+XOffset,y+YOffset-8);//8 is subtracted because the origin of the sprite starts at 8 // Head
}
else if(Action = 'shake'){
    //draw base sprite
    draw_sprite(sprite_index,image_index,x,y);
    draw_sprite_part(sprite_index,image_index,4,0,18,13,x+4+XOffset,y+YOffset-8);//8 is subtracted because the origin of the sprite starts at 8
}
else if(Action = 'shudder'){
    if(Counter &lt;= Iterations){
        draw_sprite_stretched(sprite_index,image_index,x,y-YOffset-8,24,24+YOffset);
    }
    else{
        draw_sprite(sprite_index,image_index,x,y);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
