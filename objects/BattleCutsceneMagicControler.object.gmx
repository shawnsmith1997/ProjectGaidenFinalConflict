<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1010</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//Spell
//SpellLevel
//Target //Player or enemy?

Spell = BattleCutsceneControler.Spell;
SpellLevel = BattleCutsceneControler.SpellLevel;
Caster = BattleCutsceneControler.CurrentCharacter[0].Character.GuyType;

//Set up base sprite (if we have one)
//Set up Secondary sprites (if we have some)

image_speed = .75;

alarm[0] = 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(BattleCutsceneControler){
    event_perform(ev_other,ev_user0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//takes care of animating the casted spell

//=======
//Blaze==
//=======
if((Spell = 'Blaze') &amp;&amp; (SpellLevel !=1)){
    var TempX, TempY;
    TempX = random_range(0,100);//Generate a random number from 0 to 100
    if (instance_number(BlazeFireballObj) &lt; 10){//limit of 10 fireballs on screen at one time
        if(TempX &gt; 80){//If the random number was higher than 80, then create a fireball
            TempX = random_range(-10,120);//Find Random X value to summon fireball at
            TempY = random_range(-10,15);//Find Random Y value to summon fireball at
            instance_create(view_xview+80+TempX,view_yview+50+TempY,BlazeFireballObj);//Create the fireball
        }
    }
}

else if((Spell = 'Katon') &amp;&amp; (SpellLevel !=1)){
    var TempX, TempY;
    TempX = random_range(0,100);//Generate a random number from 0 to 100
    if (instance_number(BlazeFireballObj) &lt; 10){//limit of 10 fireballs on screen at one time
        if(TempX &gt; 80){//If the random number was higher than 80, then create a fireball
            TempX = random_range(-10,120);//Find Random X value to summon fireball at
            TempY = random_range(-10,15);//Find Random Y value to summon fireball at
            instance_create(view_xview+80+TempX,view_yview+50+TempY,BlazeFireballObj);//Create the fireball
        }
    }
}
//======
//Bolt==
//======
else if((Spell = 'Bolt') &amp;&amp; (SpellLevel =1)){
    var TempX;
    TempX = random_range(0,100);//Generate a random number from 0 to 100
    if (instance_number(BoltLightningObj) &lt; 1){//limit of 1 lightnings on screen at one time
        if(TempX &gt; 70){//If the random number was higher than 80, then create a lightning
            TempX = random_range(-10,120);//Find Random X value to summon lightning at
            if(Caster = 'player'){
                instance_create(view_xview+20+TempX,view_yview+80,BoltLightningObj);//Create the lightning
                with (BoltLightningObj){
                    sprite_index = BoltLightning1;
                }
            }
            else{
                instance_create(view_xview+256-20-TempX,view_yview+80,BoltLightningObj);//Create the lightning
                with (BoltLightningObj){
                    sprite_index = BoltLightning1;
                }            
            }
        }
    }
}
else if((Spell = 'Bolt') &amp;&amp; (SpellLevel =2)){
    var TempX;
    TempX = random_range(0,100);//Generate a random number from 0 to 100
    if (instance_number(BoltLightningObj) &lt; 2){//limit of 2 lightnings on screen at one time
        if(TempX &gt; 80){//If the random number was higher than 80, then create a lightning
            TempX = random_range(-10,120);//Find Random X value to summon lightning at
            if(Caster = 'player'){
                instance_create(view_xview+20+TempX,view_yview+80,BoltLightningObj);//Create the lightning
                with (BoltLightningObj){
                    sprite_index = Bolt2;
                }            
            }
            else{
                instance_create(view_xview+256-20-TempX,view_yview+80,BoltLightningObj);//Create the lightning
                with (BoltLightningObj){
                    sprite_index = Bolt2;
                }            
            }
        }
    }
}
else if((Spell = 'Bolt') &amp;&amp; (SpellLevel =3)){
    var TempX;
    TempX = random_range(0,100);//Generate a random number from 0 to 100
    if (instance_number(BoltLightningObj) &lt; 3){//limit of 2 lightnings on screen at one time
        if(TempX &gt; 80){//If the random number was higher than 80, then create a lightning
            TempX = random_range(-10,120);//Find Random X value to summon lightning at
            if(Caster = 'player'){
                instance_create(view_xview+20+TempX,view_yview+80,BoltLightningObj);//Create the lightning
                with (BoltLightningObj){
                    sprite_index = Bolt3;
                }              
            }
            else{
                instance_create(view_xview+256-20-TempX,view_yview+80,BoltLightningObj);//Create the lightning
                with (BoltLightningObj){
                    sprite_index = Bolt3;
                }              
            }
        }
    }
}
else if((Spell = 'Bolt') &amp;&amp; (SpellLevel =4)){
    var TempX;
    TempX = random_range(0,100);//Generate a random number from 0 to 100
    if (instance_number(BoltLightningObj) &lt; 4){//limit of 2 lightnings on screen at one time
        if(TempX &gt; 80){//If the random number was higher than 80, then create a lightning
            TempX = random_range(-10,120);//Find Random X value to summon lightning at
            if(Caster = 'player'){
                instance_create(view_xview+20+TempX,view_yview+80,BoltLightningObj);//Create the lightning
                with (BoltLightningObj){
                    sprite_index = Bolt4;
                }              
            }
            else{
                instance_create(view_xview+256-20-TempX,view_yview+80,BoltLightningObj);//Create the lightning
                with (BoltLightningObj){
                    sprite_index = Bolt4;
                }              
            }
        }
    }
}

//======
//Raijin==
//======
else if((Spell = 'Raijin') &amp;&amp; (SpellLevel =1)){
    var TempX;
    TempX = random_range(0,100);//Generate a random number from 0 to 100
    if (instance_number(BoltLightningObj) &lt; 1){//limit of 1 lightnings on screen at one time
        if(TempX &gt; 70){//If the random number was higher than 80, then create a lightning
            TempX = random_range(-10,120);//Find Random X value to summon lightning at
            if(Caster = 'player'){
                instance_create(view_xview+20+TempX,view_yview+80,BoltLightningObj);//Create the lightning
                with (BoltLightningObj){
                    sprite_index = BoltLightning1;
                }
            }
            else{
                instance_create(view_xview+256-20-TempX,view_yview+80,BoltLightningObj);//Create the lightning
                with (BoltLightningObj){
                    sprite_index = BoltLightning1;
                }            
            }
        }
    }
}
else if((Spell = 'Raijin') &amp;&amp; (SpellLevel =2)){
    var TempX;
    TempX = random_range(0,100);//Generate a random number from 0 to 100
    if (instance_number(BoltLightningObj) &lt; 2){//limit of 2 lightnings on screen at one time
        if(TempX &gt; 80){//If the random number was higher than 80, then create a lightning
            TempX = random_range(-10,120);//Find Random X value to summon lightning at
            if(Caster = 'player'){
                instance_create(view_xview+20+TempX,view_yview+80,BoltLightningObj);//Create the lightning
                with (BoltLightningObj){
                    sprite_index = Bolt2;
                }            
            }
            else{
                instance_create(view_xview+256-20-TempX,view_yview+80,BoltLightningObj);//Create the lightning
                with (BoltLightningObj){
                    sprite_index = Bolt2;
                }            
            }
        }
    }
}
else if((Spell = 'Raijin') &amp;&amp; (SpellLevel =3)){
    var TempX;
    TempX = random_range(0,100);//Generate a random number from 0 to 100
    if (instance_number(BoltLightningObj) &lt; 3){//limit of 2 lightnings on screen at one time
        if(TempX &gt; 80){//If the random number was higher than 80, then create a lightning
            TempX = random_range(-10,120);//Find Random X value to summon lightning at
            if(Caster = 'player'){
                instance_create(view_xview+20+TempX,view_yview+80,BoltLightningObj);//Create the lightning
                with (BoltLightningObj){
                    sprite_index = Bolt3;
                }              
            }
            else{
                instance_create(view_xview+256-20-TempX,view_yview+80,BoltLightningObj);//Create the lightning
                with (BoltLightningObj){
                    sprite_index = Bolt3;
                }              
            }
        }
    }
}
else if((Spell = 'Raijin') &amp;&amp; (SpellLevel =4)){
    var TempX;
    TempX = random_range(0,100);//Generate a random number from 0 to 100
    if (instance_number(BoltLightningObj) &lt; 4){//limit of 2 lightnings on screen at one time
        if(TempX &gt; 80){//If the random number was higher than 80, then create a lightning
            TempX = random_range(-10,120);//Find Random X value to summon lightning at
            if(Caster = 'player'){
                instance_create(view_xview+20+TempX,view_yview+80,BoltLightningObj);//Create the lightning
                with (BoltLightningObj){
                    sprite_index = Bolt4;
                }              
            }
            else{
                instance_create(view_xview+256-20-TempX,view_yview+80,BoltLightningObj);//Create the lightning
                with (BoltLightningObj){
                    sprite_index = Bolt4;
                }              
            }
        }
    }
}

//Freeze

if((Spell = 'Freeze') &amp;&amp; (SpellLevel !=1)){
    var TempX, TempY;
    TempX = random_range(0,100);//Generate a random number from 0 to 100
    if (instance_number(FreezeballObj) &lt; 10){//limit of 10 fireballs on screen at one time
        if(TempX &gt; 80){//If the random number was higher than 80, then create a fireball
            TempX = random_range(-10,120);//Find Random X value to summon fireball at
            TempY = random_range(-10,15);//Find Random Y value to summon fireball at
            instance_create(view_xview+80+TempX,view_yview+100+TempY,FreezeballObj);//Create the fireball
        }
    }
}


//=========
//Laser Eye
//=========
else if(Spell = 'LaserEye'){
    var TempY;
    TempY = random_range(0,100);//Generate a random number from 0 to 100
    if (instance_number(LaserEyeBlastObj) &lt; 10){//limit of 10 on screen at one time
        if(TempY &gt; 85){//If the random number was higher than 80, then create a laser
            TempY = random_range(20,100);//Find Random Y value to summon laser at
            if(Caster = 'player'){
                instance_create(view_xview-70,view_yview+180+TempY,LaserEyeBlastObj);//Create the lightning
            }
            else{
                instance_create(view_xview-70,view_yview+180-TempY,LaserEyeBlastObj);//Create the lightning
            }
        }
    }
}








</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if(State = 'Attack'){
    sprite_index = Get_Battle_Cutscene_Character_Sprite(Character.ID, 'Attack');
    image_speed = Get_Battle_Cutscene_Anim_Speed(Character.ID, image_number);
    image_index = 0;
}*/

//=====
//Detox
//=====
if(Spell = 'Detox'){
    //instance_create(view_xview+195,view_yview+160,DetoxObj);
    if(BattleCutsceneControler.Reciever.FaceDirection = 'Normal'){//facing  left
        instance_create(view_xview+195,view_yview+160,DetoxObj);
    }
    else if(BattleCutsceneControler.Reciever.FaceDirection = 'Alt'){//facing right
        instance_create(view_xview+51,view_yview+160,DetoxObj);
    }
}

//=====
//Heal
//=====
else if(Spell = 'Heal'){
    //instance_create(view_xview+195,view_yview+160,DetoxObj);
    if(BattleCutsceneControler.Reciever.FaceDirection = 'Normal'){//facing  left
        instance_create(view_xview+51,view_yview+160,HealObj);//instance_create(view_xview+195,view_yview+160,HealObj);
    }
    else if(BattleCutsceneControler.Reciever.FaceDirection = 'Alt'){//facing right
        instance_create(view_xview+51,view_yview+160,HealObj);
    }
}

//=====
//Aura
//=====
else if(Spell = 'Aura'){
    //instance_create(view_xview+195,view_yview+160,DetoxObj);
    if(BattleCutsceneControler.Reciever.FaceDirection = 'Normal'){//facing  left
        instance_create(view_xview+195,view_yview+160,HealObj);
    }
    else if(BattleCutsceneControler.Reciever.FaceDirection = 'Alt'){//facing right
        instance_create(view_xview+51,view_yview+160,HealObj);
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draws the base sprite
//Blaze Spell Stuff
if(Caster = 'player'){
    //BlazeSpell
    if((Spell = 'Blaze')&amp;&amp;(SpellLevel = 1 or SpellLevel = 2)){
        image_speed = .5;
        draw_sprite_ext(BlazeFireL1,-1,view_xview+80,view_yview+170,1,1,1,c_white,1);//draw sprite
    }
    else if((Spell = 'Blaze')&amp;&amp;(SpellLevel = 3)){
        draw_sprite_ext(BlazeFireL3,-1,view_xview+80,view_yview+170,1,1,1,c_white,1);//draw sprite
    }
    else if((Spell = 'Blaze')&amp;&amp;(SpellLevel = 4)){
        draw_sprite_ext(BlazeFireL4,-1,view_xview+80,view_yview+170,1,1,1,c_white,1);//draw sprite
    }
    
    //Lazer
    else if((Spell = 'Laser')){
        image_speed = .5;
        draw_sprite_ext(LaserSpell,-1,view_xview+192,view_yview+163,1,1,1,c_white,1);//draw sprite
    }
  
    
    //KatonSpell
    else if((Spell = 'Katon')&amp;&amp;(SpellLevel = 1 or SpellLevel = 2)){
        image_speed = .5;
        draw_sprite_ext(BlazeFireL1,-1,view_xview+80,view_yview+170,1,1,1,c_white,1);//draw sprite
    }
    else if((Spell = 'Katon')&amp;&amp;(SpellLevel = 3)){
        draw_sprite_ext(BlazeFireL3,-1,view_xview+80,view_yview+170,1,1,1,c_white,1);//draw sprite
    }
    else if((Spell = 'Katon')&amp;&amp;(SpellLevel = 4)){
        draw_sprite_ext(BlazeFireL4,-1,view_xview+80,view_yview+170,1,1,1,c_white,1);//draw sprite
    }    
    
    //Bolt Spell Stuff
    else if(Spell = 'Bolt'){
        if(SpellLevel = 2){
            draw_sprite_ext(BoltBallSmall2,-1,view_xview+90,view_yview+80+32,1,1,1,c_white,1);//draw sprite
        }
        else if(SpellLevel = 3){
            draw_sprite_ext(BoltBallBig3,-1,view_xview+90,view_yview+80+32,1,1,1,c_white,1);//draw sprite
            draw_sprite_ext(BoltBallSmall3,-1,view_xview+47,view_yview+80+58,1,1,1,c_white,1);//draw sprite
        }
        else if(SpellLevel = 4){
            draw_sprite_ext(BoltBallBig4,-1,view_xview+90,view_yview+80+32,1,1,1,c_white,1);//draw sprite
            draw_sprite_ext(BoltBallBig4,-1,view_xview+47,view_yview+80+58,1,1,1,c_white,1);//draw sprite
            draw_sprite_ext(BoltBallBig4,-1,view_xview+125,view_yview+80+44,1,1,1,c_white,1);//draw sprite
            draw_sprite_ext(BoltBallSmall4,-1,view_xview+184,view_yview+80+26,1,1,1,c_white,1);//draw sprite
        }
    }
    
    //Blast
    
    else if((Spell = 'Blast')){
        image_speed = .2;
        if(SpellLevel = 1 or SpellLevel = 2){
            draw_sprite_ext(BlastL1,-1,view_xview,view_yview,1,1,1,c_white,1);//draw sprite
        }
        else{
            draw_sprite_ext(BlastL3,-1,view_xview,view_yview,1,1,1,c_white,1);//draw sprite
        }
    }
    
    else if((Spell = 'Freeze')){
        image_speed = .2; 
        //draw_sprite_ext(FreezeFilter,-1,view_xview,view_yview,1,1,1,c_white,1);//draw sprite
        draw_sprite_ext(NewFreezeL1,-1,view_xview+100,view_yview+170,1,1,1,c_white,1);//draw sprite
        /* Old
        draw_sprite_ext(FreezeFilter,-1,view_xview,view_yview,1,1,1,c_white,1);//draw sprite
        draw_sprite_ext(FreezeL1,-1,view_xview+100,view_yview+170,1,1,1,c_white,1);//draw sprite
        draw_sprite_ext(FreezeL1_2,-1,view_xview+100,view_yview+170,1,1,1,c_white,1);//draw sprite
        draw_sprite_ext(FreezeL1_3,-1,view_xview+100,view_yview+170,1,1,1,c_white,1);//draw sprite
        draw_sprite_ext(FreezeL1_4,-1,view_xview+100,view_yview+170,1,1,1,c_white,1);//draw sprite
        */
    }    
    
    //Desoul
    else if((Spell = 'Desoul')){
        image_speed = .5;
        draw_sprite_ext(DesoulSprite,-1,view_xview+80,view_yview+170,1,1,1,c_white,1);//draw sprite
    } 
    
}
else if(Caster = 'enemy'){
    if((Spell = 'Blaze')&amp;&amp;(SpellLevel = 1 or SpellLevel = 2)){
        draw_sprite_ext(BlazeFireL1,-1,view_xview+200,view_yview+180,1,1,1,c_white,1);//draw sprite
    }
    else if((Spell = 'Blaze')&amp;&amp;(SpellLevel = 3)){
        draw_sprite_ext(BlazeFireL3,-1,view_xview+200,view_yview+180,1,1,1,c_white,1);//draw sprite
    }
    else if((Spell = 'Blaze')&amp;&amp;(SpellLevel = 4)){
        draw_sprite_ext(BlazeFireL4,-1,view_xview+200,view_yview+180,1,1,1,c_white,1);//draw sprite
    }
    //Bolt Spell Stuff
    else if(Spell = 'Bolt'){
        if(SpellLevel = 2){
            draw_sprite_ext(BoltBallSmall,-1,view_xview+90,view_yview+80+32,1,1,1,c_white,1);//draw sprite
        }
        else if(SpellLevel = 3){
            draw_sprite_ext(BoltBallBig,-1,view_xview+90,view_yview+80+32,1,1,1,c_white,1);//draw sprite
            draw_sprite_ext(BoltBallSmall,-1,view_xview+47,view_yview+80+58,1,1,1,c_white,1);//draw sprite
        }
        else if(SpellLevel = 4){
            draw_sprite_ext(BoltBallBig,-1,view_xview+90,view_yview+80+32,1,1,1,c_white,1);//draw sprite
            draw_sprite_ext(BoltBallBig,-1,view_xview+47,view_yview+80+58,1,1,1,c_white,1);//draw sprite
            draw_sprite_ext(BoltBallBig,-1,view_xview+125,view_yview+80+44,1,1,1,c_white,1);//draw sprite
            draw_sprite_ext(BoltBallSmall,-1,view_xview+184,view_yview+80+26,1,1,1,c_white,1);//draw sprite
        }
    }
    else if((Spell = 'Freeze')){
        image_speed = .5;
        draw_sprite_ext(FreezeFilter,-1,view_xview,view_yview,1,1,1,c_white,1);//draw sprite
        draw_sprite_ext(FreezeL1,-1,view_xview+200,view_yview+170,1,1,1,c_white,1);//draw sprite
        draw_sprite_ext(FreezeL1_2,-1,view_xview+200,view_yview+170,1,1,1,c_white,1);//draw sprite
        draw_sprite_ext(FreezeL1_3,-1,view_xview+200,view_yview+170,1,1,1,c_white,1);//draw sprite
        draw_sprite_ext(FreezeL1_4,-1,view_xview+200,view_yview+170,1,1,1,c_white,1);//draw sprite
    }
    else if((Spell = 'Demon')){
        image_speed = .1;
        draw_sprite_ext(DemonBreatheSprite,-1,view_xview+96,view_yview+95,1,1,1,c_white,1);//draw sprite
        draw_sprite_ext(DemonBreatheSprite2,-1,view_xview+80,view_yview+110,1,1,1,c_white,1);//draw sprite
        draw_sprite_ext(DemonBreatheSprite3,-1,view_xview+96,view_yview+135,1,1,1,c_white,1);//draw sprite
        draw_sprite_ext(DemonBreatheSprite4,-1,view_xview+80,view_yview+160,1,1,1,c_white,1);//draw sprite
    }    
    else if((Spell = 'Blast')){
        image_speed = .1;
        draw_sprite_ext(BlastL3,-1,view_xview+125,view_yview,1,1,1,c_white,1);//draw sprite
    }     
    else if((Spell = 'Desoul')){
        image_speed = .5;
        draw_sprite_ext(DesoulSprite,-1,view_xview+80,view_yview+170,1,1,1,c_white,1);//draw sprite
    }    
    
    
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
