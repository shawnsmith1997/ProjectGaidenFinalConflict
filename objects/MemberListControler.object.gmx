<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>CursorPosition = 1;//when selecting a character
StartIndex = 1;//initial character to display
Display = 'default';//default or stats
SubDisplay = 'default';//default, items, or magic
MemberDisplay[0] = 1;//the array of characters to display
PanDirection = 'none';
Pan = 200;
EquipPan = 0;
AllowInteraction = false;
Action = 'none';
CurrentObject = 0;
State = 'none';
SelectedItem = 'Top';
Event = 'none';
EventState = 0;//for running item / spell effects
image_speed = .0625;

EquippableWeapons[0] = 0;
EquippableItems[0] = 0;

var i,j;
i = 1;
j = 1;
//Creates an array of all our recruited force members
if (global.currentArea &lt; 6){
    global.ForceMembers = 6;
    while(j &lt;= global.ForceMembers){//loop through and draw members and stats
    if(global.In_Force[i] = true){

        MemberListControler.MemberDisplay[j] = global.ID[i];

        j += 1;
    }
    i += 1;
}
}
/*if(global.currentArea = 2){
    MemberListControler.MemberDisplay[1] = global.ID[1];
    MemberListControler.MemberDisplay[2] = global.ID[2];
    MemberListControler.MemberDisplay[3] = global.ID[3];
    MemberListControler.MemberDisplay[4] = global.ID[4];
    MemberListControler.MemberDisplay[5] = global.ID[5];
    global.ForceMembers = 5;

}*/
else{
while(j &lt;= global.ForceMembers){//loop through and draw members and stats
    if(global.In_Force[i] = true){

        MemberListControler.MemberDisplay[j] = global.ID[i];

        j += 1;
    }
    i += 1;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.isMovable = true;
global.doneCutscene = true;
if(global.currentArea = 2){
    global.ForceMembers = 7;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(PanDirection = 'in'){
    Pan -= 35;
    if(Pan &lt;= 0){
        Pan = 0;
        PanDirection = 'none';
        AllowInteraction = true;
    }
}   
else if(PanDirection = 'out'){
    Pan += 35;
    if(Pan &gt;= 200){
        Pan = 200;
        PanDirection = 'none';
        event_perform(ev_other,ev_user0);
    }
}
else if(PanDirection = 'EquipIn'){
    EquipPan -= 35;
    if(EquipPan &lt;= 0){
        EquipPan = 0;
        PanDirection = 'none';
        AllowInteraction = true;
    }
}   
else if(PanDirection = 'EquipOut'){
    EquipPan += 35;
    if(EquipPan &gt;= 200){
        EquipPan = 200;
        PanDirection = 'none';
        event_perform(ev_other,ev_user0);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Key Event Listeners
if(AllowInteraction){
    //Select
    if (keyboard_check_pressed(global.SelectButton)){
        if(SubDisplay = 'default'){//'status'
            if(State = 'none'){//go to status page
                AllowInteraction = false;
                PanDirection = 'out';
                Action = 'ToStatus';
                sound_play(MenuPanSound);
            }
            else if(State = 'SelectingUseTarget'){//item use
                AllowInteraction = false;
                sound_play(MenuPanSound);
                PanDirection = 'out';
                Action = 'SelectedUseTarget';
            }
        }
        
        else if(SubDisplay = 'Cutscene'){//'item functions'
           //Shop 1
           global.give_cutscene_item = MemberDisplay[StartIndex + CursorPosition -1];
           if(global.Items[global.give_cutscene_item,4] = 0){
               Give_Item_Town(global.give_cutscene_item,60)
               room_goto(Town1);     
               instance_destroy();
           }
        }
        
        
        else if(SubDisplay = 'Shop'){//'item functions'
           //Shop 1
           global.give_shop_item = MemberDisplay[StartIndex + CursorPosition -1];
           
           
           
          if (global.currentArea &gt;= 55 and global.currentArea &lt; 90 and global.shopIndex = 1){ //Shop 3
                   
          if (global.position_shop = 0 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 6000) ){
            Give_Item_Town(global.give_shop_item,45)
            room_goto(ShopCutsceneBought);
            global.Gold -= 6000;
          }
          else if (global.position_shop = 1 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 8800)){
            Give_Item_Town(global.give_shop_item,46)
            room_goto(ShopCutsceneBought);
            global.Gold -= 8800;
          }
          else if (global.position_shop = 2 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 5800) ){
            Give_Item_Town(global.give_shop_item,47)
            room_goto(ShopCutsceneBought);
            global.Gold -= 5800;
          }
          else if (global.position_shop = 3 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 4500) ){
            Give_Item_Town(global.give_shop_item,48)
            room_goto(ShopCutsceneBought);
            global.Gold -= 4500;
          }
          else if (global.position_shop = 4 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 4800) ){
            Give_Item_Town(global.give_shop_item,49)
            room_goto(ShopCutsceneBought);
            global.Gold -= 4800;
          }
          else if (global.position_shop = 5 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 3800) ){
            Give_Item_Town(global.give_shop_item,50)
            room_goto(ShopCutsceneBought);
            global.Gold -= 3800;
          } 
          else if(global.Items[global.give_shop_item,4] != 0){
          room_goto(ShopCutsceneNoRoom);
          }
          else{
          room_goto(ShopCutsceneNoMoney);
          }
          sound_play(MenuPanSound);    
        }
        
         else if (global.currentArea &gt;= 55 and global.currentArea &lt; 90 and global.shopIndex = 2){ //Shop 3
                   
          if (global.position_shop = 0 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 600) ){
            Give_Item_Town(global.give_shop_item,42)
            room_goto(ShopCutsceneBought);
            global.Gold -= 600;
          }
          else if (global.position_shop = 1 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 2100)){
            Give_Item_Town(global.give_shop_item,51)
            room_goto(ShopCutsceneBought);
            global.Gold -= 2100;
          }
          /*else if (global.position_shop = 3 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 500) ){
            Give_Item_Town(global.give_shop_item,31)
            room_goto(ShopCutsceneBought);
            global.Gold -= 500;
          }
          else if (global.position_shop = 4 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 600) ){
            Give_Item_Town(global.give_shop_item,33)
            room_goto(ShopCutsceneBought);
            global.Gold -= 600;
          }
          else if (global.position_shop = 5 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 300) ){
            Give_Item_Town(global.give_shop_item,32)
            room_goto(ShopCutsceneBought);
            global.Gold -= 300;
          } 
          else if(global.Items[global.give_shop_item,4] != 0){
          room_goto(ShopCutsceneNoRoom);
          }*/
          else{
          room_goto(ShopCutsceneNoMoney);
          }
          sound_play(MenuPanSound);    
        }        
//GENERAL SHOP
         else if (global.currentArea &gt;= 55 and global.currentArea &lt; 90 and global.shopIndex = 10){ //Shop 3
                   
          if (global.position_shop = 0 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 10) ){
            Give_Item_Town(global.give_shop_item,201)
            room_goto(ShopCutsceneBought);
            global.Gold -= 10;
          }
          else if (global.position_shop = 1 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 20)){
            Give_Item_Town(global.give_shop_item,203)
            room_goto(ShopCutsceneBought);
            global.Gold -= 20;
          }
          else if (global.position_shop = 2 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 200) ){
            Give_Item_Town(global.give_shop_item,202)
            room_goto(ShopCutsceneBought);
            global.Gold -= 200;
          }
          else if (global.position_shop = 3 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 500) ){
            Give_Item_Town(global.give_shop_item,204)
            room_goto(ShopCutsceneBought);
            global.Gold -= 40;
          }
  
          else if(global.Items[global.give_shop_item,4] != 0){
          room_goto(ShopCutsceneNoRoom);
          }
          else{
          room_goto(ShopCutsceneNoMoney);
          }
          sound_play(MenuPanSound);    
        }           
           
           
           
           
           
           
           
           
           
  /////////////////////////////////////         
           
         if (global.currentArea &gt;= 41 and global.currentArea &lt; 55 and global.shopIndex = 1){ //Shop 3
                   
          if (global.position_shop = 0 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 680) ){
            Give_Item_Town(global.give_shop_item,36)
            room_goto(ShopCutsceneBought);
            global.Gold -= 680;
          }
          else if (global.position_shop = 1 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 1200)){
            Give_Item_Town(global.give_shop_item,37)
            room_goto(ShopCutsceneBought);
            global.Gold -= 1200;
          }
          else if (global.position_shop = 2 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 780) ){
            Give_Item_Town(global.give_shop_item,38)
            room_goto(ShopCutsceneBought);
            global.Gold -= 780;
          }
          else if (global.position_shop = 3 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 1500) ){
            Give_Item_Town(global.give_shop_item,39)
            room_goto(ShopCutsceneBought);
            global.Gold -= 1500;
          }
          else if (global.position_shop = 4 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 800) ){
            Give_Item_Town(global.give_shop_item,40)
            room_goto(ShopCutsceneBought);
            global.Gold -= 800;
          }
          else if (global.position_shop = 5 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 1200) ){
            Give_Item_Town(global.give_shop_item,41)
            room_goto(ShopCutsceneBought);
            global.Gold -= 1200;
          } 
          else if(global.Items[global.give_shop_item,4] != 0){
          room_goto(ShopCutsceneNoRoom);
          }
          else{
          room_goto(ShopCutsceneNoMoney);
          }
          sound_play(MenuPanSound);    
        }
        
         else if (global.currentArea &gt;= 41 and global.currentArea &lt; 55 and global.shopIndex = 2){ //Shop 3
                   
          if (global.position_shop = 0 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 600) ){
            Give_Item_Town(global.give_shop_item,42)
            room_goto(ShopCutsceneBought);
            global.Gold -= 600;
          }
          else if (global.position_shop = 1 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 700)){
            Give_Item_Town(global.give_shop_item,43)
            room_goto(ShopCutsceneBought);
            global.Gold -= 700;
          }
          else if (global.position_shop = 2 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 2200) ){
            Give_Item_Town(global.give_shop_item,44)
            room_goto(ShopCutsceneBought);
            global.Gold -= 2200;
          }
          /*else if (global.position_shop = 3 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 500) ){
            Give_Item_Town(global.give_shop_item,31)
            room_goto(ShopCutsceneBought);
            global.Gold -= 500;
          }
          else if (global.position_shop = 4 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 600) ){
            Give_Item_Town(global.give_shop_item,33)
            room_goto(ShopCutsceneBought);
            global.Gold -= 600;
          }
          else if (global.position_shop = 5 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 300) ){
            Give_Item_Town(global.give_shop_item,32)
            room_goto(ShopCutsceneBought);
            global.Gold -= 300;
          } 
          else if(global.Items[global.give_shop_item,4] != 0){
          room_goto(ShopCutsceneNoRoom);
          }*/
          else{
          room_goto(ShopCutsceneNoMoney);
          }
          sound_play(MenuPanSound);    
        }        
//GENERAL SHOP
         else if (global.currentArea &gt;= 41 and global.currentArea &lt; 55 and global.shopIndex = 10){ //Shop 3
                   
          if (global.position_shop = 0 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 10) ){
            Give_Item_Town(global.give_shop_item,201)
            room_goto(ShopCutsceneBought);
            global.Gold -= 10;
          }
          else if (global.position_shop = 1 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 20)){
            Give_Item_Town(global.give_shop_item,203)
            room_goto(ShopCutsceneBought);
            global.Gold -= 20;
          }
          else if (global.position_shop = 2 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 200) ){
            Give_Item_Town(global.give_shop_item,202)
            room_goto(ShopCutsceneBought);
            global.Gold -= 200;
          }
          else if (global.position_shop = 3 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 500) ){
            Give_Item_Town(global.give_shop_item,204)
            room_goto(ShopCutsceneBought);
            global.Gold -= 40;
          }
  
          else if(global.Items[global.give_shop_item,4] != 0){
          room_goto(ShopCutsceneNoRoom);
          }
          else{
          room_goto(ShopCutsceneNoMoney);
          }
          sound_play(MenuPanSound);    
        }    

         if (global.currentArea &gt;= 12 and global.currentArea &lt; 41 and global.shopIndex = 1){ //Shop 3
                   
          if (global.position_shop = 0 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 350) ){
            Give_Item_Town(global.give_shop_item,29)
            room_goto(ShopCutsceneBought);
            global.Gold -= 350;
          }
          else if (global.position_shop = 1 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 400)){
            Give_Item_Town(global.give_shop_item,30)
            room_goto(ShopCutsceneBought);
            global.Gold -= 400;
          }
          else if (global.position_shop = 2 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 380) ){
            Give_Item_Town(global.give_shop_item,35)
            room_goto(ShopCutsceneBought);
            global.Gold -= 380;
          }
          else if (global.position_shop = 3 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 500) ){
            Give_Item_Town(global.give_shop_item,31)
            room_goto(ShopCutsceneBought);
            global.Gold -= 500;
          }
          else if (global.position_shop = 4 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 600) ){
            Give_Item_Town(global.give_shop_item,33)
            room_goto(ShopCutsceneBought);
            global.Gold -= 600;
          }
          else if (global.position_shop = 5 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 300) ){
            Give_Item_Town(global.give_shop_item,32)
            room_goto(ShopCutsceneBought);
            global.Gold -= 300;
          } 
          else if(global.Items[global.give_shop_item,4] != 0){
          room_goto(ShopCutsceneNoRoom);
          }
          else{
          room_goto(ShopCutsceneNoMoney);
          }
          sound_play(MenuPanSound);    
        }
//GENERAL SHOP
         else if (global.currentArea &gt;= 12 and global.currentArea &lt; 41 and global.shopIndex = 10){ //Shop 3
                   
          if (global.position_shop = 0 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 10) ){
            Give_Item_Town(global.give_shop_item,201)
            room_goto(ShopCutsceneBought);
            global.Gold -= 10;
          }
          else if (global.position_shop = 1 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 20)){
            Give_Item_Town(global.give_shop_item,203)
            room_goto(ShopCutsceneBought);
            global.Gold -= 20;
          }
          else if (global.position_shop = 2 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 200) ){
            Give_Item_Town(global.give_shop_item,202)
            room_goto(ShopCutsceneBought);
            global.Gold -= 200;
          }
          else if (global.position_shop = 3 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 500) ){
            Give_Item_Town(global.give_shop_item,204)
            room_goto(ShopCutsceneBought);
            global.Gold -= 40;
          }
  
          else if(global.Items[global.give_shop_item,4] != 0){
          room_goto(ShopCutsceneNoRoom);
          }
          else{
          room_goto(ShopCutsceneNoMoney);
          }
          sound_play(MenuPanSound);    
        }  
                   
        else if (global.currentArea &gt;= 6 and global.currentArea &lt;= 11 and global.shopIndex = 1){ //Shop 2
                   
          if (global.position_shop = 0 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 160) ){
            Give_Item_Town(global.give_shop_item,1)
            room_goto(ShopCutsceneBought);
            global.Gold -= 160;
          }
          else if (global.position_shop = 1 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 120)){
            Give_Item_Town(global.give_shop_item,27)
            room_goto(ShopCutsceneBought);
            global.Gold -= 120;
          }
          else if (global.position_shop = 2 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 130) ){
            Give_Item_Town(global.give_shop_item,26)
            room_goto(ShopCutsceneBought);
            global.Gold -= 130;
          }
          else if (global.position_shop = 3 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 180) ){
            Give_Item_Town(global.give_shop_item,17)
            room_goto(ShopCutsceneBought);
            global.Gold -= 180;
          }
          else if (global.position_shop = 4 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 140) ){
            Give_Item_Town(global.give_shop_item,3)
            room_goto(ShopCutsceneBought);
            global.Gold -= 140;
          }
          else if (global.position_shop = 5 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 80) ){
            Give_Item_Town(global.give_shop_item,28)
            room_goto(ShopCutsceneBought);
            global.Gold -= 80;
          } 
          else if(global.Items[global.give_shop_item,4] != 0){
          room_goto(ShopCutsceneNoRoom);
          }
          else{
          room_goto(ShopCutsceneNoMoney);
          }
          sound_play(MenuPanSound);    
        }

//GENERAL SHOP
         else if (global.currentArea &gt;= 6 and global.currentArea &lt;= 11 and global.shopIndex = 10){ //Shop 3
                   
          if (global.position_shop = 0 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 10) ){
            Give_Item_Town(global.give_shop_item,201)
            room_goto(ShopCutsceneBought);
            global.Gold -= 10;
          }
          else if (global.position_shop = 1 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 20)){
            Give_Item_Town(global.give_shop_item,203)
            room_goto(ShopCutsceneBought);
            global.Gold -= 20;
          }
          else if (global.position_shop = 2 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 200) ){
            Give_Item_Town(global.give_shop_item,202)
            room_goto(ShopCutsceneBought);
            global.Gold -= 200;
          }
          else if (global.position_shop = 3 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 500) ){
            Give_Item_Town(global.give_shop_item,204)
            room_goto(ShopCutsceneBought);
            global.Gold -= 40;
          }
  
          else if(global.Items[global.give_shop_item,4] != 0){
          room_goto(ShopCutsceneNoRoom);
          }
          else{
          room_goto(ShopCutsceneNoMoney);
          }
          sound_play(MenuPanSound);    
        }  
        
        else if (global.currentArea &lt; 6 and global.shopIndex = 1){ //Shop 1
                   
          if (global.position_shop = 0 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 160) ){
            Give_Item_Town(global.give_shop_item,1)
            room_goto(ShopCutsceneBought);
            global.Gold -= 160;
          }
          else if (global.position_shop = 1 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 120)){
            Give_Item_Town(global.give_shop_item,7)
            room_goto(ShopCutsceneBought);
            global.Gold -= 250;
          }
          else if (global.position_shop = 2 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 130) ){
            Give_Item_Town(global.give_shop_item,25)
            room_goto(ShopCutsceneBought);
            global.Gold -= 200;
          }
          else if (global.position_shop = 3 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 180) ){
            Give_Item_Town(global.give_shop_item,17)
            room_goto(ShopCutsceneBought);
            global.Gold -= 180;
          }
          else if (global.position_shop = 4 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 140) ){
            Give_Item_Town(global.give_shop_item,3)
            room_goto(ShopCutsceneBought);
            global.Gold -= 140;
          }
          else if (global.position_shop = 5 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 80) ){
            Give_Item_Town(global.give_shop_item,4)
            room_goto(ShopCutsceneBought);
            global.Gold -= 80;
          } 
          else if(global.Items[global.give_shop_item,4] != 0){
          room_goto(ShopCutsceneNoRoom);
          }
          else{
          room_goto(ShopCutsceneNoMoney);
          }
          sound_play(MenuPanSound);    
        }        
        
//GENERAL SHOP
         else if (global.currentArea &lt; 6 and global.shopIndex = 10){ //Shop 3
                   
          if (global.position_shop = 0 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 10) ){
            Give_Item_Town(global.give_shop_item,201)
            room_goto(ShopCutsceneBought);
            global.Gold -= 10;
          }
          else if (global.position_shop = 1 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 20)){
            Give_Item_Town(global.give_shop_item,203)
            room_goto(ShopCutsceneBought);
            global.Gold -= 20;
          }
          else if (global.position_shop = 2 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 200) ){
            Give_Item_Town(global.give_shop_item,202)
            room_goto(ShopCutsceneBought);
            global.Gold -= 200;
          }
          else if (global.position_shop = 3 and (global.Items[global.give_shop_item,4] = 0) and (global.Gold &gt;= 500) ){
            Give_Item_Town(global.give_shop_item,204)
            room_goto(ShopCutsceneBought);
            global.Gold -= 40;
          }
  
          else if(global.Items[global.give_shop_item,4] != 0){
          room_goto(ShopCutsceneNoRoom);
          }
          else{
          room_goto(ShopCutsceneNoMoney);
          }
          sound_play(MenuPanSound);    
        }          
        
    }        
    
        else if(SubDisplay = 'Item'){//'item functions'
            if(State = 'none'){
                if(global.Items[MemberDisplay[StartIndex + CursorPosition -1],1]!=0){//if we have an item in our inventory
                    if(Event = 'Equip'){
                        SelectedItem = 'Top';
                        if(Has_Equippable_Weapon_Town(MemberDisplay[StartIndex + CursorPosition -1])){//do we have an equippable weapon?
                            AllowInteraction = false;
                            Get_Town_Equippable_Weapons(MemberDisplay[StartIndex + CursorPosition -1],self.id);
                            sound_play(MenuPanSound);
                            PanDirection = 'EquipOut';
                            Action = 'ToEquipWeapon';
                        }
                        else if(Has_Equippable_Item_Town(MemberDisplay[StartIndex + CursorPosition -1])){//if not, do we have an equippable item?
                            AllowInteraction = false;
                            Get_Town_Equippable_Items(MemberDisplay[StartIndex + CursorPosition -1],self.id);
                            sound_play(MenuPanSound);
                            PanDirection = 'EquipOut';
                            Action = 'ToEquipItem';
                        }
                        else{
                            sound_play(ErrorSound);
                        }
                    }
                    else{
                        State = 'SelectingItem';
                        SelectedItem = 'Top';
                        sound_play(MenuSelectSound);
                    }
                }
                else{
                    sound_play(ErrorSound);
                }
            }
            else if(State = 'SelectingItem'){
                //run Item script.
                AllowInteraction = false;
                PanDirection = 'out';
                switch (Event){
                case 'Shop': Action = 'ShopItem'; break;
                case 'Use': Action = 'UseItem'; break;
                case 'Give': Action = 'GiveItem'; break;
                case 'Equip': Action = 'EquipItem'; break;
                case 'Drop':  Action = 'DropItem'; break;
                case 'Sell': if(global.Items[MemberDisplay[StartIndex + CursorPosition -1],1]!=0){ Action = 'SellItem';} else{room_goto(ShopCutsceneNoItem)} break;
                }
                
                sound_play(MenuPanSound);
                //event_perform(ev_other,ev_user10);//Effect Calls
            }
            else if(State = 'SelectingGiveTarget'){//item give
                if((global.Items[MemberDisplay[StartIndex + CursorPosition -1],4]!=0)&amp;&amp;(MemberDisplay[StartIndex + CursorPosition -1]!=TownItemGiveControler.Character1)){//if our inventory is full and we arent targeting the same guy
                    State = 'SelectingGiveTargetItem';
                    SelectedItem = 'Top';
                    sound_play(MenuSelectSound);
                }
                else{
                    sound_play(MenuSelectSound);
                    AllowInteraction = false;
                    sound_play(MenuPanSound);
                    PanDirection = 'out';
                    Action = 'SelectedGiveTarget';
                }
            }
            else if(State = 'SelectingGiveTargetItem'){
                    sound_play(MenuSelectSound);
                    AllowInteraction = false;
                    sound_play(MenuPanSound);
                    PanDirection = 'out';
                    Action = 'SelectedGiveTargetItem';
            }
            else if(State = 'EquippingWeapon'){
                switch (SelectedItem){//equip the weapon
                    case 'Top': global.Equipped_Weapon[MemberDisplay[StartIndex + CursorPosition -1]] = EquippableWeapons[1]; break;
                    case 'Left': global.Equipped_Weapon[MemberDisplay[StartIndex + CursorPosition -1]] = EquippableWeapons[2]; break;
                    case 'Right': global.Equipped_Weapon[MemberDisplay[StartIndex + CursorPosition -1]] = EquippableWeapons[3]; break;
                    case 'Bottom': global.Equipped_Weapon[MemberDisplay[StartIndex + CursorPosition -1]] = EquippableWeapons[4]; break;
                }
                //pan out
                AllowInteraction = false;
                sound_play(MenuPanSound);
                PanDirection = 'EquipOut';
                Action = 'EndEquippedWeapon';
            }
            else if(State = 'EquippingItem'){
                switch (SelectedItem){//equip the weapon
                    case 'Top': global.Equipped_Item[MemberDisplay[StartIndex + CursorPosition -1]] = EquippableItems[1]; break;
                    case 'Left': global.Equipped_Item[MemberDisplay[StartIndex + CursorPosition -1]] = EquippableItems[2]; break;
                    case 'Right': global.Equipped_Item[MemberDisplay[StartIndex + CursorPosition -1]] = EquippableItems[3]; break;
                    case 'Bottom': global.Equipped_Item[MemberDisplay[StartIndex + CursorPosition -1]] = EquippableItems[4]; break;
                }
                //pan out
                AllowInteraction = false;
                sound_play(MenuPanSound);
                PanDirection = 'EquipOut';
                Action = 'EndEquippedItem';
            }
        }
    }
    
    //Back
    if (keyboard_check_pressed(global.BackButton) and SubDisplay != 'Cutscene'){
        if(State = 'none'){
            AllowInteraction = false;
            PanDirection = 'out';
            Action = 'BackOut';
            sound_play(MenuPanSound);
        }
        else if(State = 'SelectingItem'){
            State = 'none';
            sound_play(MenuSelectSound);
        }
        else if(State = 'SelectingUseTarget'){
            AllowInteraction = false;
            sound_play(MenuPanSound);
            PanDirection = 'out';
            Action = 'BackToItem';
            with(TownItemUseControler){
                instance_destroy();
            }
            with(TownItemGiveControler){
                instance_destroy();
            }
        }
        else if(State = 'EquippingWeapon'){
            AllowInteraction = false;
            sound_play(MenuPanSound);
            PanDirection = 'EquipOut';
            Action = 'BackToEquipChar';
        }
        else if(State = 'EquippingItem'){
            if(Has_Equippable_Weapon_Town(MemberDisplay[StartIndex + CursorPosition -1])){//do we have an equippable weapon?
                AllowInteraction = false;
                sound_play(MenuPanSound);
                PanDirection = 'EquipOut';
                Action = 'ToEquipWeapon';
            }
            else{
                AllowInteraction = false;
                sound_play(MenuPanSound);
                PanDirection = 'EquipOut';
                Action = 'BackToEquipChar';
            }
        }
    }
    
    //Left
    if (keyboard_check_pressed(global.LeftButton)){
        if((State = 'SelectingItem')||(State = 'SelectingGiveTargetItem')){
            if(global.Items[MemberDisplay[StartIndex + CursorPosition -1],2]!=0){
                sound_play(MenuMoveSound);
                SelectedItem = 'Left';
            }
        }
        else if(State = 'EquippingWeapon'){
            if(EquippableWeapons[2] != 0){
                sound_play(MenuMoveSound);
                SelectedItem = 'Left';
            }
        }
        else if(State = 'EquippingItem'){
            if(EquippableItems[2] != 0){
                sound_play(MenuMoveSound);
                SelectedItem = 'Left';
            }
        }
        else{
            sound_play(MenuMoveSound);
            if(Display = 'default'){
                Display = 'stats';
            }
            else if(Display = 'stats'){
                Display = 'default';
            }
        }
    }
    
    //Right
    if (keyboard_check_pressed(global.RightButton)){
        if((State = 'SelectingItem')||(State = 'SelectingGiveTargetItem')){
            if(global.Items[MemberDisplay[StartIndex + CursorPosition -1],3]!=0){
                sound_play(MenuMoveSound);
                SelectedItem = 'Right';
            }
        }
        else if(State = 'EquippingWeapon'){
            if(EquippableWeapons[3] != 0){
                sound_play(MenuMoveSound);
                SelectedItem = 'Right';
            }
        }
        else if(State = 'EquippingItem'){
            if(EquippableItems[3] != 0){
                sound_play(MenuMoveSound);
                SelectedItem = 'Right';
            }
        }
        else{
            sound_play(MenuMoveSound);
            if(Display = 'default'){
                Display = 'stats';
            }
            else if(Display = 'stats'){
                Display = 'default';
            }
        }
    }
    
    //Up
    if (keyboard_check_pressed(global.UpButton)){
        if((State = 'SelectingItem')||(State = 'SelectingGiveTargetItem')){
            if(global.Items[MemberDisplay[StartIndex + CursorPosition -1],1]!=0){
                sound_play(MenuMoveSound);
                SelectedItem = 'Top';
            }
        }
        else if(State = 'EquippingWeapon'){
            if(EquippableWeapons[1] != 0){
                sound_play(MenuMoveSound);
                SelectedItem = 'Top';
            }
        }
        else if(State = 'EquippingItem'){
            if(EquippableItems[1] != 0){
                sound_play(MenuMoveSound);
                SelectedItem = 'Top';
            }
        }
        else{
            sound_play(MenuMoveSound);
            if(CursorPosition = 1){
                if(StartIndex != 1){
                    StartIndex -= 1;
                }
            }
            else{
                CursorPosition -= 1;
            }
        }
    }
    
    //Down
    if (keyboard_check_pressed(global.DownButton)){
        if((State = 'SelectingItem')||(State = 'SelectingGiveTargetItem')){
            if(global.Items[MemberDisplay[StartIndex + CursorPosition -1],4]!=0){
                sound_play(MenuMoveSound);
                SelectedItem = 'Bottom';
            }
        }
        else if((State = 'EquippingWeapon')||((State = 'EquippingItem'))){
                sound_play(MenuMoveSound);
                SelectedItem = 'Bottom';
        }
        else{
            sound_play(MenuMoveSound);
            if(CursorPosition = 5){
                if((StartIndex + CursorPosition -1) != global.ForceMembers){//more to list
                    StartIndex += 1;
                }
            }
            else{
                if(CursorPosition &lt; global.ForceMembers){
                    CursorPosition += 1;
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//came back from status page
visible = true;
PanDirection = 'in';
sound_play(MenuPanSound);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(Action = 'ToStatus'){
    visible = false;
    instance_create(0,0,StatusPageControler);
    StatusPageControler.CurrentObject = self.id;
    StatusPageControler.PanDirection = 'in';
    StatusPageControler.Character = MemberDisplay[StartIndex + CursorPosition -1];
    sound_play(MenuPanSound);
}
else if(Action = 'BackOut'){
    with(CurrentObject){
        event_perform(ev_other,ev_user1);
        sound_play(MenuPanSound);
    }
    if(!global.position_player = 0){
        global.isMovable = true;
    }
    room_goto(Town1);
    instance_destroy();
}
else if(Action = 'UseItem'){
    instance_create(0,0,TownItemUseControler);
    TownItemUseControler.Character1 = MemberDisplay[StartIndex + CursorPosition -1];
    TownItemUseControler.Character2 = MemberDisplay[StartIndex + CursorPosition -1];
    TownItemUseControler.CurrentObject = self.id;
    switch (SelectedItem){
        case 'Top': TownItemUseControler.ItemSlot = 1; break;
        case 'Left': TownItemUseControler.ItemSlot = 2; break;
        case 'Right': TownItemUseControler.ItemSlot = 3; break;
        case 'Bottom': TownItemUseControler.ItemSlot = 4; break;
    }
    with(TownItemUseControler){
        TargetOther = Get_Item_Stats(global.Items[Character1,ItemSlot],'TargetOther');
        if(TargetOther){
            State = -1;
        }
        event_perform(ev_other,ev_user0);
    }
}
else if(Action = 'GiveItem'){
    instance_create(0,0,TownItemGiveControler);
    TownItemGiveControler.Character1 = MemberDisplay[StartIndex + CursorPosition -1];
    TownItemGiveControler.CurrentObject = self.id;
    switch (SelectedItem){
        case 'Top': TownItemGiveControler.ItemSlot = 1; break;
        case 'Left': TownItemGiveControler.ItemSlot = 2; break;
        case 'Right': TownItemGiveControler.ItemSlot = 3; break;
        case 'Bottom': TownItemGiveControler.ItemSlot = 4; break;
    }
    with(TownItemGiveControler){
        event_perform(ev_other,ev_user0);
    }
}

else if(Action = 'ShopItem'){
 
}



else if(Action = 'EquipItem'){

}
else if(Action = 'DropItem'){
    instance_create(0,0,TownItemDropControler);
    TownItemDropControler.Character1 = MemberDisplay[StartIndex + CursorPosition -1];
    TownItemDropControler.CurrentObject = self.id;
    switch (SelectedItem){
        case 'Top': TownItemDropControler.ItemSlot = 1; break;
        case 'Left': TownItemDropControler.ItemSlot = 2; break;
        case 'Right': TownItemDropControler.ItemSlot = 3; break;
        case 'Bottom': TownItemDropControler.ItemSlot = 4; break;
    }
    with(TownItemDropControler){
        //CanDrop = Get_Item_Stats(global.Items[Character1,ItemSlot],19);//make sure we dont discard important items!
        //if(!CanDrop){
            //State = -1;
        //}
        event_perform(ev_other,ev_user0);
    }
}

else if(Action = 'SellItem'){
    instance_create(0,0,TownItemDropControler);
    TownItemDropControler.Character1 = MemberDisplay[StartIndex + CursorPosition -1];
    TownItemDropControler.CurrentObject = self.id;
    switch (SelectedItem){
        case 'Top': TownItemDropControler.ItemSlot = 1; break;
        case 'Left': TownItemDropControler.ItemSlot = 2; break;
        case 'Right': TownItemDropControler.ItemSlot = 3; break;
        case 'Bottom': TownItemDropControler.ItemSlot = 4; break;
    }
    with(TownItemDropControler){
        //CanDrop = Get_Item_Stats(global.Items[Character1,ItemSlot],19);//make sure we dont discard important items!
        //if(!CanDrop){
            //State = -1;
        //}
        event_perform(ev_other,ev_user0);
    }
}

else if(Action = 'SelectedUseTarget'){
    TownItemUseControler.Character2 = MemberDisplay[StartIndex + CursorPosition -1];
    with(TownItemUseControler){
        State = 0;
        event_perform(ev_other,ev_user0);
    }
}
else if(Action = 'BackToItem'){
    sound_play(MenuPanSound);
    PanDirection = 'in';
    SubDisplay = 'Item';
    Action = 'none';
    State = 'none';
}


else if(Action = 'SelectedGiveTarget'){
    TownItemGiveControler.Character2 = MemberDisplay[StartIndex + CursorPosition -1];
    TownItemGiveControler.ItemSlot2 = 0;//not recieving an item
    with(TownItemGiveControler){
        event_perform(ev_other,ev_user0);
    }
}
else if(Action = 'SelectedGiveTargetItem'){
    TownItemGiveControler.Character2 = MemberDisplay[StartIndex + CursorPosition -1];
    switch (SelectedItem){
        case 'Top': TownItemGiveControler.ItemSlot2 = 1; break;
        case 'Left': TownItemGiveControler.ItemSlot2 = 2; break;
        case 'Right': TownItemGiveControler.ItemSlot2 = 3; break;
        case 'Bottom': TownItemGiveControler.ItemSlot2 = 4; break;
    }
    with(TownItemGiveControler){
        event_perform(ev_other,ev_user0);
    }
}
else if(Action = 'ToEquipWeapon'){
    PanDirection = 'EquipIn';
    sound_play(MenuPanSound);
    State = 'EquippingWeapon';
}
else if(Action = 'ToEquipItem'){
    PanDirection = 'EquipIn';
    sound_play(MenuPanSound);
    State = 'EquippingItem';
}
else if(Action = 'BackToEquipChar'){
    PanDirection = 'EquipIn';
    sound_play(MenuPanSound);
    State = 'none';
}
else if(Action = 'EndEquippedWeapon'){
    if(Has_Equippable_Item_Town(MemberDisplay[StartIndex + CursorPosition -1])){//if not, do we have an equippable item?
        Get_Town_Equippable_Items(MemberDisplay[StartIndex + CursorPosition -1],self.id);
        sound_play(MenuPanSound);
        PanDirection = 'EquipIn';
        Action = 'ToEquipItem';
        SelectedItem = 'Top';
        State = 'EquippingItem';
    }
    else{
        PanDirection = 'EquipIn';
        sound_play(MenuPanSound);
        State = 'none';
    }
}
else if(Action = 'EndEquippedItem'){
    PanDirection = 'EquipIn';
    sound_play(MenuPanSound);
    State = 'none';
}







</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(StatusMenuTop,0,view_xview + 8 + 62 + Pan+ EquipPan, view_yview + 8 - Pan);
draw_sprite(StatusMenuBottom,0,view_xview + 8, view_yview + 118 + Pan);
draw_sprite(Get_Portrait(MemberDisplay[StartIndex + CursorPosition -1]),0,view_xview + 8 - Pan, view_yview + 8- Pan);

draw_set_halign(fa_left);
draw_set_color(c_white);
draw_set_font(MenuFont);

//Draw Name Class Level of selected character
draw_text(view_xview + 82+ Pan+ EquipPan, view_yview + 6- Pan, string(string(global.Name[MemberDisplay[StartIndex + CursorPosition -1]]) + ' ' + string(global.Class[MemberDisplay[StartIndex + CursorPosition -1]]) + ' Lv' + string(global.Level[MemberDisplay[StartIndex + CursorPosition -1]])));

//Draw Force Members and stats
if(Display = 'default'){
    draw_text(view_xview + 26, view_yview + 116 + Pan, 'NAME    CLASS      LEV EXP');
}
else if(Display = 'stats'){
    draw_text(view_xview + 26, view_yview + 116 + Pan, 'NAME    HP MP AT DF AG MV');
}
var i;
for(i = 1; ((i &lt;= 5)&amp;&amp;(i &lt;= global.ForceMembers)) i += 1){
    if(Display = 'default'){//display name class level experience
        draw_set_halign(fa_left);
        draw_text(view_xview + 26, view_yview + 120 +(i * 18) + Pan, string(global.Name[MemberDisplay[StartIndex + i -1]]));
        draw_text(view_xview + 90, view_yview + 120 +(i * 18) + Pan, string(global.Class[MemberDisplay[StartIndex + i -1]]));
        
        draw_set_halign(fa_right);
        draw_text(view_xview + 202, view_yview + 120+(i * 18) + Pan, string(global.Level[MemberDisplay[StartIndex + i -1]]));
        draw_text(view_xview + 234, view_yview + 120+(i * 18) + Pan, string(global.Experience[MemberDisplay[StartIndex + i -1]]));
    }
    else if(Display = 'stats'){//display att def agi mov hp mp
        draw_set_halign(fa_left);
        draw_text(view_xview + 26, view_yview + 120 +(i * 18) + Pan, string(global.Name[MemberDisplay[StartIndex + i -1]]));
        draw_text(view_xview + 90, view_yview + 120+(i * 18) + Pan, string(global.MaxHealth[MemberDisplay[StartIndex + i -1]]));
        draw_text(view_xview + 90+16+8, view_yview + 120+(i * 18) + Pan, string(global.MaxMagic[MemberDisplay[StartIndex + i -1]]));
        draw_text(view_xview + 90+32+16, view_yview + 120+(i * 18) + Pan, string(Get_Stat_Total(MemberDisplay[StartIndex + i -1],'Attack')));
        draw_text(view_xview + 90+48+16+8, view_yview + 120+(i * 18) + Pan, string(Get_Stat_Total(MemberDisplay[StartIndex + i -1],'Defense')));
        draw_text(view_xview + 90+64+32, view_yview + 120+(i * 18) + Pan, string(Get_Stat_Total(MemberDisplay[StartIndex + i -1],'Agility')));
        draw_text(view_xview + 90+80+32+8, view_yview + 120+(i * 18) + Pan, string(Get_Stat_Total(MemberDisplay[StartIndex + i -1],'MoveRange')));
    }
}

if((State = 'none')||(State = 'SelectingUseTarget')||(State = 'SelectingGiveTarget')){
    draw_sprite(ForceMenuSelectSprite,-1,view_xview + 20, view_yview + 126 +(18*(CursorPosition)) + Pan); //flashy red thing over character name
}
else{
    draw_sprite(ForceMenuSelectSprite,0,view_xview + 20, view_yview + 126 +(18*(CursorPosition)) + Pan); //flashy red thing over character name
}


if(SubDisplay = 'default'){//Display magic and items
    draw_set_halign(fa_left);
    draw_set_color(c_white);
    draw_text(view_xview + 82 + Pan+ EquipPan, view_yview + 24- Pan, 'MAGIC     ITEM');
    
    //Display Spells of active character;
    if(global.Spells[MemberDisplay[StartIndex + CursorPosition -1],1] != 'none'){
        var i;
        for(i = 1; i &lt;= 4; i+= 1){//loop draw all 4 spells
            if(global.Spells[MemberDisplay[StartIndex + CursorPosition -1],i]!= 'none'){
                draw_text(view_xview + 100 + Pan+ EquipPan, view_yview + 16 + (16 * i)- Pan, string(global.Spells[MemberDisplay[StartIndex + CursorPosition -1],i]));
                draw_text(view_xview + 108 + Pan+ EquipPan, view_yview + 24 + (16 * i)- Pan, string('Level ' + string(global.SpellLevel[MemberDisplay[StartIndex + CursorPosition -1],i])));
            }
        }
    }
    else{ //no magic, display 'Nothing'
        draw_set_color(c_orange);
        draw_text(view_xview + 90 + Pan+ EquipPan, view_yview + 32- Pan, 'Nothing');
        draw_set_color(c_white);
    }
    
    
    //Display Items of active character;
    if(global.Items[MemberDisplay[StartIndex + CursorPosition -1],1] != 0){
        var i;
        for(i = 1; i &lt;= 4; i+= 1){//loop draw all 4 items
            if(global.Items[MemberDisplay[StartIndex + CursorPosition -1],i]!= 0){
                draw_text(view_xview + 170 + Pan+ EquipPan, view_yview + 16 + (16 * i)- Pan, string(Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],i],'Name')));
                draw_text(view_xview + 178 + Pan+ EquipPan, view_yview + 24 + (16 * i)- Pan, string(Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],i],'Name2')));
            }
        }
    }
    else{ //no Items, display 'Nothing'
        draw_set_color(c_orange);
        draw_text(view_xview + 170 + Pan+ EquipPan, view_yview + 32 - Pan, 'Nothing');
        draw_set_color(c_white);
    }
}
else if(SubDisplay = 'Magic'){

}
else if(SubDisplay = 'Item' or SubDisplay = 'Shop' or SubDisplay = 'Cutscene'){
    draw_set_halign(fa_left);
    draw_set_color(c_white);
    draw_text(view_xview + 82 + Pan + EquipPan, view_yview + 24 - Pan, ' - ITEMS -');
    
    if(State = 'EquippingWeapon'){
        draw_sprite(Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],EquippableWeapons[1]],'Sprite'),0,view_xview + 114 + Pan+ EquipPan,view_yview + 52 -Pan);
        draw_sprite(Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],EquippableWeapons[2]],'Sprite'),0,view_xview + 90 + Pan+ EquipPan,view_yview + 68-Pan);
        draw_sprite(Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],EquippableWeapons[3]],'Sprite'),0,view_xview + 138 + Pan+ EquipPan,view_yview + 68-Pan);
        //draw_sprite(Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],EquippableWeapons[4]],1),0,view_xview + 114 + Pan+ EquipPan,view_yview + 84-Pan);
        draw_sprite(RemoveItemSprite,0,view_xview + 114 + Pan+ EquipPan,view_yview + 84-Pan);
        
        //Display Items of active character;
        var Attack, Defense, Agility, MoveRange, i;
        switch(SelectedItem){
            case 'Top':
            draw_sprite(ItemFlashSprite,-1,view_xview + 114 + Pan+ EquipPan,view_yview + 52 -Pan); 
            draw_text(view_xview + 170 + Pan+ EquipPan, view_yview + 24 - Pan, string(Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],EquippableWeapons[1]],'Name')));
            draw_text(view_xview + 178 + Pan+ EquipPan, view_yview + 32 - Pan, string(Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],EquippableWeapons[1]],'Name2')));
            i = 1;
            break;
            case 'Left':
            draw_sprite(ItemFlashSprite,-1,view_xview + 90 + Pan+ EquipPan,view_yview + 68-Pan);
            draw_text(view_xview + 170 + Pan+ EquipPan, view_yview + 24 - Pan, string(Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],EquippableWeapons[2]],'Name')));
            draw_text(view_xview + 178 + Pan+ EquipPan, view_yview + 32 - Pan, string(Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],EquippableWeapons[2]],'Name2')));
            i = 2;
            break;
            case 'Right':
            draw_sprite(ItemFlashSprite,-1,view_xview + 138 + Pan+ EquipPan,view_yview + 68-Pan);
            draw_text(view_xview + 170 + Pan+ EquipPan, view_yview + 24 - Pan, string(Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],EquippableWeapons[3]],'Name')));
            draw_text(view_xview + 178 + Pan+ EquipPan, view_yview + 32 - Pan, string(Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],EquippableWeapons[3]],'Name2')));
            i = 3;
            break;
            case 'Bottom':
            draw_sprite(ItemFlashSprite,-1,view_xview + 114 + Pan+ EquipPan,view_yview + 84-Pan); 
            draw_set_color(c_orange);
            draw_text(view_xview + 170 + Pan+ EquipPan, view_yview + 24 - Pan, 'Nothing');
            draw_set_color(c_white);
            i = 4;
            break;
        }
        Attack = global.Attack[MemberDisplay[StartIndex + CursorPosition -1]] + Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],EquippableWeapons[i]],'Attack') + Get_Item_Stats(Get_Equipped_Item(MemberDisplay[StartIndex + CursorPosition -1]),'Attack');
        Defense = global.Defense[MemberDisplay[StartIndex + CursorPosition -1]] + Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],EquippableWeapons[i]],'Defense') + Get_Item_Stats(Get_Equipped_Item(MemberDisplay[StartIndex + CursorPosition -1]),'Defense');
        Agility = global.Agility[MemberDisplay[StartIndex + CursorPosition -1]] + Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],EquippableWeapons[i]],'Agility') + Get_Item_Stats(Get_Equipped_Item(MemberDisplay[StartIndex + CursorPosition -1]),'Agility');
        MoveRange = global.MoveRange[MemberDisplay[StartIndex + CursorPosition -1]] + Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],EquippableWeapons[i]],'MoveRange') + Get_Item_Stats(Get_Equipped_Item(MemberDisplay[StartIndex + CursorPosition -1]),'MoveRange');
        draw_text(view_xview + 170 + Pan+ EquipPan, view_yview + 40 - Pan, string('ATT  '+string(Attack)));
        draw_text(view_xview + 170 + Pan+ EquipPan, view_yview + 56 - Pan, string('DEF  '+string(Defense)));
        draw_text(view_xview + 170 + Pan+ EquipPan, view_yview + 72 - Pan, string('AGI  '+string(Agility)));
        draw_text(view_xview + 170 + Pan+ EquipPan, view_yview + 88 - Pan, string('MOV  '+string(MoveRange)));
    }
    else if(State = 'EquippingItem'){
        draw_sprite(Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],EquippableItems[1]],'Sprite'),0,view_xview + 114 + Pan+ EquipPan,view_yview + 52 -Pan);
        draw_sprite(Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],EquippableItems[2]],'Sprite'),0,view_xview + 90 + Pan+ EquipPan,view_yview + 68-Pan);
        draw_sprite(Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],EquippableItems[3]],'Sprite'),0,view_xview + 138 + Pan+ EquipPan,view_yview + 68-Pan);
        //draw_sprite(Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],EquippableWeapons[4]],1),0,view_xview + 114 + Pan+ EquipPan,view_yview + 84-Pan);
        draw_sprite(RemoveItemSprite,0,view_xview + 114 + Pan+ EquipPan,view_yview + 84-Pan);
        
        //Display Items of active character;
        var Attack, Defense, Agility, MoveRange, i;
        switch(SelectedItem){
            case 'Top':
            draw_sprite(ItemFlashSprite,-1,view_xview + 114 + Pan+ EquipPan,view_yview + 52 -Pan); 
            draw_text(view_xview + 170 + Pan+ EquipPan, view_yview + 24 - Pan, string(Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],EquippableItems[1]],'Name')));
            draw_text(view_xview + 178 + Pan+ EquipPan, view_yview + 32 - Pan, string(Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],EquippableItems[1]],'Name2')));
            i = 1;
            break;
            case 'Left':
            draw_sprite(ItemFlashSprite,-1,view_xview + 90 + Pan+ EquipPan,view_yview + 68-Pan);
            draw_text(view_xview + 170 + Pan+ EquipPan, view_yview + 24 - Pan, string(Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],EquippableItems[2]],'Name')));
            draw_text(view_xview + 178 + Pan+ EquipPan, view_yview + 32 - Pan, string(Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],EquippableItems[2]],'Name2')));
            i = 2;
            break;
            case 'Right':
            draw_sprite(ItemFlashSprite,-1,view_xview + 138 + Pan+ EquipPan,view_yview + 68-Pan);
            draw_text(view_xview + 170 + Pan+ EquipPan, view_yview + 24 - Pan, string(Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],EquippableItems[3]],'Name')));
            draw_text(view_xview + 178 + Pan+ EquipPan, view_yview + 32 - Pan, string(Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],EquippableItems[3]],'Name2')));
            i = 3;
            break;
            case 'Bottom':
            draw_sprite(ItemFlashSprite,-1,view_xview + 114 + Pan+ EquipPan,view_yview + 84-Pan); 
            draw_set_color(c_orange);
            draw_text(view_xview + 170 + Pan+ EquipPan, view_yview + 24 - Pan, 'Nothing');
            draw_set_color(c_white);
            i = 4;
            break;
        }
        Attack = global.Attack[MemberDisplay[StartIndex + CursorPosition -1]] + Get_Item_Stats(Get_Equipped_Weapon(MemberDisplay[StartIndex + CursorPosition -1]),'Attack') + Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],EquippableItems[i]],'Attack');
        Defense = global.Defense[MemberDisplay[StartIndex + CursorPosition -1]] + Get_Item_Stats(Get_Equipped_Weapon(MemberDisplay[StartIndex + CursorPosition -1]),'Defense') + Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],EquippableItems[i]],'Defense');
        Agility = global.Agility[MemberDisplay[StartIndex + CursorPosition -1]] + Get_Item_Stats(Get_Equipped_Weapon(MemberDisplay[StartIndex + CursorPosition -1]),'Agility') + Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],EquippableItems[i]],'Agility');
        MoveRange = global.MoveRange[MemberDisplay[StartIndex + CursorPosition -1]] + Get_Item_Stats(Get_Equipped_Weapon(MemberDisplay[StartIndex + CursorPosition -1]),'MoveRange') + Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],EquippableItems[i]],'MoveRange');
        draw_text(view_xview + 170 + Pan+ EquipPan, view_yview + 40 - Pan, string('ATT  '+string(Attack)));
        draw_text(view_xview + 170 + Pan+ EquipPan, view_yview + 56 - Pan, string('DEF  '+string(Defense)));
        draw_text(view_xview + 170 + Pan+ EquipPan, view_yview + 72 - Pan, string('AGI  '+string(Agility)));
        draw_text(view_xview + 170 + Pan+ EquipPan, view_yview + 88 - Pan, string('MOV  '+string(MoveRange)));
    }
    else{
        draw_sprite(Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],1],'Sprite'),0,view_xview + 114 + Pan+ EquipPan,view_yview + 52 -Pan);
        draw_sprite(Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],2],'Sprite'),0,view_xview + 90 + Pan+ EquipPan,view_yview + 68-Pan);
        draw_sprite(Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],3],'Sprite'),0,view_xview + 138 + Pan+ EquipPan,view_yview + 68-Pan);
        draw_sprite(Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],4],'Sprite'),0,view_xview + 114 + Pan+ EquipPan,view_yview + 84-Pan);
        
        //Display Items of active character;
        if(global.Items[MemberDisplay[StartIndex + CursorPosition -1],1] != 0){
            var i;
            for(i = 1; i &lt;= 4; i+= 1){//loop draw all 4 items
                if(global.Items[MemberDisplay[StartIndex + CursorPosition -1],i]!= 0){
                    draw_text(view_xview + 170 + Pan+ EquipPan, view_yview + 16 + (16 * i)- Pan, string(Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],i],'Name')));
                    draw_text(view_xview + 178 + Pan+ EquipPan, view_yview + 24 + (16 * i)- Pan, string(Get_Item_Stats(global.Items[MemberDisplay[StartIndex + CursorPosition -1],i],'Name2')));
                }
            }
        }
        else{ //no Items, display 'Nothing'
            draw_set_color(c_orange);
            draw_text(view_xview + 170 + Pan+ EquipPan, view_yview + 32 - Pan, 'Nothing');
            draw_set_color(c_white);
        }
    }
    
    
    
    if((State = 'SelectingItem')||(State = 'SelectingGiveTargetItem')){//choosing an item to use, give, ect
        switch(SelectedItem){//draw item flash over the currently selected item
            case 'Top': 
                draw_sprite(ItemFlashSprite,-1,view_xview + 114 + Pan+ EquipPan,view_yview + 52 -Pan); 
                draw_sprite(ForceMenuSelectSprite,0,view_xview + 168 + Pan+ EquipPan, view_yview + 43 - Pan);
                break;
            case 'Left': 
                draw_sprite(ItemFlashSprite,-1,view_xview + 90 + Pan+ EquipPan,view_yview + 68-Pan);
                draw_sprite(ForceMenuSelectSprite,0,view_xview + 168 + Pan+ EquipPan, view_yview + 59 - Pan);
                break;
            case 'Right': 
                draw_sprite(ItemFlashSprite,-1,view_xview + 138 + Pan+ EquipPan,view_yview + 68-Pan);
                draw_sprite(ForceMenuSelectSprite,0,view_xview + 168 + Pan+ EquipPan, view_yview + 75 - Pan);
                break;
            case 'Bottom': 
                draw_sprite(ItemFlashSprite,-1,view_xview + 114 + Pan+ EquipPan,view_yview + 84-Pan); 
                draw_sprite(ForceMenuSelectSprite,0,view_xview + 168 + Pan+ EquipPan, view_yview + 91 - Pan);
                break;
        }
    }
}


//new stuff

/*
if((State != 12)&amp;&amp;(State != 15)&amp;&amp;(State != 21)){
draw_sprite(ForceMenuSelectSprite,-1,view_xview + 20, view_yview + 140 +(18*(ForceListState - 1)));
}
if((State = 12)||(State = 15)||(State = 21)){
draw_sprite(ForceMenuSelectSprite,0,view_xview + 20, view_yview + 140 +(18*(ForceListState - 1)));
}
draw_sprite(Get_Portrait(SelectedMember),0,view_xview + 8, view_yview + 8);

draw_set_halign(fa_left);

draw_text(view_xview + 8 + 62 + 12, view_yview + 6, string(string(global.Name[SelectedMember]) + ' ' + string(global.Class[SelectedMember]) + ' Lv' + string(global.Level[SelectedMember])));

if((State = 11)||(State = 12)||(State = 14)||(State = 15)){
draw_text(view_xview + 8 + 62 + 12, view_yview + 6+18, ' - ITEMS -');
}

if((State = 5)||(State = 11)||(State = 12)||(State = 14)||(State = 15)||(State = 20)){
}


//draw_set_color(c_white);

}
if(State = 6){
Draw_Status_Page(SelectedMember);
}


if((State = 11)||(State = 12)||(State = 14)||(State = 15)||(State = 20)){
//Draw Item Stuff
Temp = global.Items[SelectedMember,1];
if (Temp != 0){
draw_sprite(Get_Item_Sprite(Temp),0,view_xview + 114,view_yview + 52);
}
else{
draw_sprite(BlankSlot,0,view_xview + 114,view_yview + 52);
}

Temp = global.Items[SelectedMember,2];
if (Temp != 0){
draw_sprite(Get_Item_Sprite(Temp),0,view_xview + 90,view_yview + 68);
}
else{
draw_sprite(BlankSlot,0,view_xview + 90,view_yview + 68);
}

Temp = global.Items[SelectedMember,3];
if (Temp != 0){
draw_sprite(Get_Item_Sprite(Temp),0,view_xview + 138,view_yview + 68);
}
else{
draw_sprite(BlankSlot,0,view_xview + 138,view_yview + 68);
}

Temp = global.Items[SelectedMember,4];
if (Temp != 0){
draw_sprite(Get_Item_Sprite(Temp),0,view_xview + 114,view_yview + 84);
}
else{
draw_sprite(BlankSlot,0,view_xview + 114,view_yview + 84);
}


}

if(State = 21){

//Draw Stats
draw_text(view_xview + 8 + 62 + 12, view_yview + 6+18, ' - ITEMS -');
draw_text(view_xview + 8 + 62 + 12+8+40+40, view_yview + 6+16+18, "ATT");

draw_text(view_xview + 8 + 62 + 12+8+40+40, view_yview + 6+10+16+24, "DEF");

draw_text(view_xview + 8 + 62 + 12+8+40+40, view_yview + 6+10+16+40, "AGI");

draw_text(view_xview + 8 + 62 + 12+8+40+40, view_yview + 6+10+16+56, "MOV");

//First equippable slot

draw_sprite(Get_Item_Sprite(global.Items[SelectedMember,ItemEquipList[1]]),0,view_xview + 114,view_yview + 52);
if(ItemSelectState = 1){
draw_text(view_xview + 8 + 62 + 4+40+40+16, view_yview + 6+18, string(Get_Item_Name(global.Items[SelectedMember,ItemEquipList[1]],1)));
draw_text(view_xview + 8 + 62 + 4+8+40+40+16, view_yview + 6+18+8, string(Get_Item_Name(global.Items[SelectedMember,ItemEquipList[1]],2)));
draw_set_halign(fa_right);
draw_text(view_xview + 8 + 62 + 12+8+40+40+56, view_yview + 6+16+18, global.Attack[SelectedMember] + Get_Item_Damage(global.Items[SelectedMember,ItemEquipList[1]]));
draw_text(view_xview + 8 + 62 + 12+8+40+40+56, view_yview + 6+10+16+24, global.Defense[SelectedMember]+Get_Item_Defense(global.Items[SelectedMember,ItemEquipList[1]]));
draw_text(view_xview + 8 + 62 + 12+8+40+40+56, view_yview + 6+10+16+40, global.Agility[SelectedMember]+Get_Item_Agility(global.Items[SelectedMember,ItemEquipList[1]]));
draw_text(view_xview + 8 + 62 + 12+8+40+40+56, view_yview + 6+10+16+56, global.MoveRange[SelectedMember]);
draw_set_halign(fa_left);
}


//Second equippable slot
draw_sprite(Get_Item_Sprite(global.Items[SelectedMember,ItemEquipList[2]]),0,view_xview + 90,view_yview + 68);
if(ItemSelectState = 2){
draw_text(view_xview + 8 + 62 + 4+40+40+16, view_yview + 6+18, string(Get_Item_Name(global.Items[SelectedMember,ItemEquipList[2]],1)));
draw_text(view_xview + 8 + 62 + 4+8+40+40+16, view_yview + 6+18+8, string(Get_Item_Name(global.Items[SelectedMember,ItemEquipList[2]],2)));
draw_set_halign(fa_right);
draw_text(view_xview + 8 + 62 + 12+8+40+40+56, view_yview + 6+16+18, global.Attack[SelectedMember] + Get_Item_Damage(global.Items[SelectedMember,ItemEquipList[2]]));
draw_text(view_xview + 8 + 62 + 12+8+40+40+56, view_yview + 6+10+16+24, global.Defense[SelectedMember]+Get_Item_Defense(global.Items[SelectedMember,ItemEquipList[2]]));
draw_text(view_xview + 8 + 62 + 12+8+40+40+56, view_yview + 6+10+16+40, global.Agility[SelectedMember]+Get_Item_Agility(global.Items[SelectedMember,ItemEquipList[2]]));
draw_text(view_xview + 8 + 62 + 12+8+40+40+56, view_yview + 6+10+16+56, global.MoveRange[SelectedMember]);
draw_set_halign(fa_left);
}

//Third equippable slot

draw_sprite(Get_Item_Sprite(global.Items[SelectedMember,ItemEquipList[3]]),0,view_xview + 138,view_yview + 68);
if(ItemSelectState = 3){
draw_text(view_xview + 8 + 62 + 4+40+40+16, view_yview + 6+18, string(Get_Item_Name(global.Items[SelectedMember,ItemEquipList[3]],1)));
draw_text(view_xview + 8 + 62 + 4+8+40+40+16, view_yview + 6+18+8, string(Get_Item_Name(global.Items[SelectedMember,ItemEquipList[3]],2)));
draw_set_halign(fa_right);
draw_text(view_xview + 8 + 62 + 12+8+40+40+56, view_yview + 6+16+18, global.Attack[SelectedMember] + Get_Item_Damage(global.Items[SelectedMember,ItemEquipList[3]]));
draw_text(view_xview + 8 + 62 + 12+8+40+40+56, view_yview + 6+10+16+24, global.Defense[SelectedMember]+Get_Item_Defense(global.Items[SelectedMember,ItemEquipList[3]]));
draw_text(view_xview + 8 + 62 + 12+8+40+40+56, view_yview + 6+10+16+40, global.Agility[SelectedMember]+Get_Item_Agility(global.Items[SelectedMember,ItemEquipList[3]]));
draw_text(view_xview + 8 + 62 + 12+8+40+40+56, view_yview + 6+10+16+56, global.MoveRange[SelectedMember]);
draw_set_halign(fa_left);
}

if(ItemSelectState = 4){
draw_set_color(c_orange);
draw_text(view_xview + 8 + 62 + 12+40+40+16, view_yview + 6+18, "Remove");
draw_set_color(c_white);
draw_set_halign(fa_right);
draw_text(view_xview + 8 + 62 + 12+8+40+40+56, view_yview + 6+16+18, global.Attack[SelectedMember]);
draw_text(view_xview + 8 + 62 + 12+8+40+40+56, view_yview + 6+10+16+24, global.Defense[SelectedMember]);
draw_text(view_xview + 8 + 62 + 12+8+40+40+56, view_yview + 6+10+16+40, global.Agility[SelectedMember]);
draw_text(view_xview + 8 + 62 + 12+8+40+40+56, view_yview + 6+10+16+56, global.MoveRange[SelectedMember]);
draw_set_halign(fa_left);
}
draw_sprite(UnEquipSprite,0,view_xview + 114,view_yview + 84);

}

if((State = 12)||(State = 15)||(State = 21)){
if(State != 21){
draw_sprite(ForceMenuSelectSprite,0,view_xview + 168, view_yview + 43 +(16*(ItemSelectState - 1)));
}
if(ItemSelectState = 1){
draw_sprite(Item_00Sprite,-1,view_xview + 114,view_yview + 52);
}
if(ItemSelectState = 2){
draw_sprite(Item_00Sprite,-1,view_xview + 90,view_yview + 68);
}
if(ItemSelectState = 3){
draw_sprite(Item_00Sprite,-1,view_xview + 138,view_yview + 68);
}
if(ItemSelectState = 4){
draw_sprite(Item_00Sprite,-1,view_xview + 114,view_yview + 84);
}
}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
